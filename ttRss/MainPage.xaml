<local:AbstractArticlePage
    x:Class="TinyTinyRSS.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TinyTinyRSS"
    xmlns:converter="using:TinyTinyRSS.Classes"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <CollectionViewSource x:Name="groupedFeeds" IsSourceGrouped="True"/>
        <converter:IntToStringConverter x:Key="IntStringConverter" />
        <converter:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
        <converter:ZeroToNoStringConverter x:Key="ZeroToNoStringConverter" />
        <converter:BoolToBoldConverter x:Key="BoldConverter" />
    </Page.Resources>

    <Grid>
        <!-- Adaptive triggers -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="CompactInline"/>
                        <Setter Target="RootSplitView.IsPaneOpen" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="CompactOverlay"/>
                        <Setter Target="RootSplitView.IsPaneOpen" Value="False"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualState x:Name="landscape">
                <VisualState.StateTriggers>
                   <converter:OrientationStateTrigger Orientation="Landscape" />
               </VisualState.StateTriggers>
               <VisualState.Setters>
                   <Setter Target="Article_Grid.(RelativePanel.RightOf)" Value="HeadlinesView"> </Setter>
                   <Setter Target="Article_Grid.(RelativePanel.AlignTopWith)" Value="HeadlinesView"> </Setter>
               </VisualState.Setters>
           </VisualState>
           <VisualState x:Name="portrait">
               <VisualState.StateTriggers>
                   <converter:OrientationStateTrigger Orientation="Portrait" />
               </VisualState.StateTriggers>
               <VisualState.Setters>
                   <Setter Target="Article_Grid.(RelativePanel.Below)" Value="HeadlinesView"> </Setter>
                   <Setter Target="Article_Grid.(RelativePanel.AlignLeftWith)" Value="HeadlinesView"> </Setter>
               </VisualState.Setters>
           </VisualState>
        </VisualStateManager.VisualStateGroups>

        <!-- Top-level navigation menu + app content -->
        <SplitView x:Name="RootSplitView"
                   DisplayMode="Inline"
                   OpenPaneLength="256"
                   IsTabStop="False">
            <SplitView.Pane>
                <Grid Margin="0,48,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ScrollViewer Grid.Row="0">
                        <StackPanel>
                            <TextBlock Text="" x:Uid="SpecialFeeds" />
                            <ListView x:Name="SpecialFeedsList" SelectionChanged="ListView_SelectionChanged"
                                        ItemsSource="{Binding}">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid HorizontalAlignment="Stretch" Margin="0,0,0,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>
                                            <SymbolIcon Symbol="{Binding icon}" Width="36" Grid.Column="0" HorizontalAlignment="Left" />
                                            <TextBlock TextWrapping="Wrap" HorizontalAlignment="Stretch" Text="{Binding name}" Margin="0,4" Grid.Column="1" />
                                            <TextBlock Text="{Binding count, Converter={StaticResource ZeroToNoStringConverter}}" Margin="0,4" Grid.Column="2" />
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    </Style>
                                </ListView.ItemContainerStyle>
                            </ListView>
                            <SemanticZoom>
                                <SemanticZoom.ZoomedInView>
                                    <ListView x:Name="AllFeedsList" 
                                        ItemsSource="{Binding Source={StaticResource groupedFeeds}}" 
                                        SelectionChanged="AllFeedsList_SelectionChanged"                                  
                                        Background="Transparent" VerticalContentAlignment="Top">
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <Grid HorizontalAlignment="Stretch">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Image MaxWidth="32" MaxHeight="32" Source="{Binding feed.icon}" Grid.Column="0" HorizontalAlignment="Left" ScrollViewer.VerticalScrollBarVisibility="Disabled"/>
                                                    <TextBlock TextWrapping="Wrap" HorizontalAlignment="Stretch" Text="{Binding feed.title}" Margin="0,5" Grid.Column="1" />
                                                    <TextBlock Text="{Binding feed.unread, Converter={StaticResource IntStringConverter}}" Margin="0,5" Grid.Column="2" />
                                                </Grid>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                        <ListView.ItemContainerStyle>
                                            <Style TargetType="ListViewItem">
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            </Style>
                                        </ListView.ItemContainerStyle>
                                        <ListView.GroupStyle>
                                            <GroupStyle HidesIfEmpty="True">
                                                <GroupStyle.HeaderContainerStyle>
                                                    <Style TargetType="ListViewHeaderItem">
                                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                    </Style>
                                                </GroupStyle.HeaderContainerStyle>
                                                <GroupStyle.HeaderTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Text='{Binding Key.title}' Grid.Column="0"
                                                       Foreground="{StaticResource PhoneAccentBrush}" 
                                                       FontSize="{StaticResource TextStyleMediumFontSize}" 
                                                       HorizontalAlignment="Stretch" />
                                                            <TextBlock Text='{Binding Key.combined}' Grid.Column="1" 
                                                       Foreground="{StaticResource PhoneAccentBrush}" 
                                                       FontSize="{StaticResource TextStyleMediumFontSize}" 
                                                       HorizontalAlignment="Right" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </GroupStyle.HeaderTemplate>
                                            </GroupStyle>
                                        </ListView.GroupStyle>
                                    </ListView>
                                </SemanticZoom.ZoomedInView>
                                <SemanticZoom.ZoomedOutView>
                                    <ListView Background="{StaticResource ApplicationPageBackgroundThemeBrush}" 
                                        ItemsSource="{Binding Source={StaticResource groupedFeeds}, Path=CollectionGroups}" Padding="25,25,0,0">
                                        <ListView.ItemContainerStyle>
                                            <Style TargetType="ListViewItem">
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </ListView.ItemContainerStyle>
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Background="{StaticResource ApplicationPageBackgroundThemeBrush}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Text='{Binding Group.Key.title}' Grid.Column="0"
                                               Foreground="{StaticResource PhoneAccentBrush}" 
                                               FontSize="{StaticResource TextStyleMediumFontSize}" />
                                                    <TextBlock Text='{Binding Group.Key.combined}' Grid.Column="1" 
                                               Foreground="{StaticResource PhoneAccentBrush}" 
                                               FontSize="{StaticResource TextStyleMediumFontSize}" />
                                                </Grid>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </SemanticZoom.ZoomedOutView>
                            </SemanticZoom>
                        </StackPanel>
                    </ScrollViewer>
                    <CommandBar Grid.Row="1">
                        <AppBarButton x:Name="settingsAppBarButton" Icon="Setting" Click="AppBarButton_Click"
                          x:Uid="SettingsAppBarButton" Label="" />
                        <AppBarButton x:Name="refreshAppBarButton" Icon="Refresh" Click="AppBarButton_Click" 
                          Label="" x:Uid="RefreshAppBarButton" />
                        <AppBarButton x:Name="infoAppBarButton" Icon="Help" Click="AppBarButton_Click" 
                          Label="" x:Uid="InfoAppBarButton" />
                    </CommandBar>
                </Grid>
            </SplitView.Pane>

            <Grid x:Name="Splitview_Content">
                <Grid.RowDefinitions>
                    <!-- Head -->
                    <RowDefinition Height="Auto" />
                    <!-- Relative Panel -->
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid x:Name="Headlines_Grid" Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <!-- Headline -->
                        <RowDefinition Height="Auto"/>
                        <!-- Toolbar evtl. als CommandBar siehe NavigationMenu Sample -->
                    </Grid.RowDefinitions>
                    <TextBlock Name="FeedTitle" Grid.Row="0" TextWrapping="Wrap" FontSize="{StaticResource TextStyleLargeFontSize}" />
                    <CommandBar Name="FilterCommandBar" Grid.Row="1">
                        <AppBarToggleButton IsChecked="False" Name="MultiSelectAppBarButton" 
                                x:Uid="MultiSelectAppBarButton" Icon="List" 
                                Label="" Click="MultiSelectAppBarButton_Click" />
                        <AppBarButton x:Name="showUnreadOnlyAppBarMenu" Icon="Filter">
                            <AppBarButton.Flyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem x:Uid="ShowAllArticles" Text="" Click="FilterButton_Click" />
                                    <MenuFlyoutItem x:Uid="ShowOnlyUnreadArticles" Text="" Click="FilterButton_Click" />
                                </MenuFlyout>
                            </AppBarButton.Flyout>
                        </AppBarButton>
                        <AppBarButton x:Name="sortAppBarMenu" Icon="Sort">
                            <AppBarButton.Flyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem x:Uid="ArticlesSortDefault" Text="" Click="SortButton_Click" />
                                    <MenuFlyoutItem x:Uid="ArticlesSortNew" Text="" Click="SortButton_Click" />
                                    <MenuFlyoutItem x:Uid="ArticlesSortOld" Text="" Click="SortButton_Click" />
                                </MenuFlyout>
                            </AppBarButton.Flyout>
                        </AppBarButton>
                    </CommandBar>
                 </Grid>
                 <RelativePanel Grid.Row="1">
                    <ListView Name="HeadlinesView" ItemsSource="{Binding}" SelectionMode="Single" 
    				          SelectionChanged="HeadlinesView_SelectionChanged" >
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="5" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="0 1 0 0" 
    											BorderBrush="Gray">
                                            <TextBlock x:Name="Headline" HorizontalAlignment="Left" TextWrapping="Wrap" 
    												   FontSize="{StaticResource TextStyleLargeFontSize}" Text="{Binding Headline.title}" 
    												   FontWeight="{Binding Path=Headline.unread, Converter={StaticResource BoldConverter}}"/>
                                        </Border>
                                        <TextBlock x:Name="Time" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding Headline.formattedDate, Mode=OneWay}" FontStyle="Italic" Margin="0,0,5,0" FontSize="{StaticResource TextStyleSmallFontSize}"/>
                                        <TextBlock x:Name="Author" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" TextWrapping="Wrap" Text="{Binding Headline.author, Mode=OneWay}" FontStyle="Italic" Margin="0,0,5,0" FontSize="{StaticResource TextStyleSmallFontSize}"/>
                                        <TextBlock x:Name="FeedUrl" HorizontalAlignment="Left" TextWrapping="Wrap" 
    												Grid.Row="2" Grid.ColumnSpan="2" Grid.Column="0" 
    											   VerticalAlignment="Center" Text="{Binding Headline.feed_title}" FontSize="{StaticResource TextStyleSmallFontSize}"/>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    <!-- Werbung -->
                    <Grid x:Name="Article_Grid" DataContext="{Binding}" Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}, FallbackValue=Collapsed}"
                            RelativePanel.Below="HeadlinesView" AlignLeftWith="HeadlinesView">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock x:Name="Headline" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="20" Text="{Binding Headline.title}"/>
                            <TextBlock x:Name="Time" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding Headline.formattedDate, Mode=OneWay}" FontStyle="Italic" Margin="0,0,5,0" FontSize="14"/>
                            <TextBlock x:Name="Author" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" TextWrapping="Wrap" Text="{Binding Headline.author, Mode=OneWay}" FontStyle="Italic" Margin="0,0,5,0" FontSize="14"/>
                            <StackPanel Orientation="Horizontal" Grid.Row="2" VerticalAlignment="Top" Grid.Column="0" Grid.ColumnSpan="2" Margin="0">
                                <Image x:Name="Icon" HorizontalAlignment="Left" VerticalAlignment="Center" Height="Auto" Width="Auto" MaxHeight="16" MaxWidth="16" Margin="0,0,5,0" Source="{Binding Headline.iconurl}" ImageFailed="Icon_ImageFailed" />
                                <TextBlock x:Name="FeedUrl" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Center" Text="{Binding Headline.feed_title}" FontSize="14"/>
                            </StackPanel>
                        </Grid>
                        <WebView Name="WebContent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="3" Source="{Binding Article.content}" />
                    </Grid>                
                </RelativePanel>
			</Grid>
        </SplitView>

        <!-- Declared last to have it rendered above everything else, but it needs to be the first item in the tab sequence. -->
        <ToggleButton x:Name="TogglePaneButton"
                      TabIndex="1"
                      Style="{StaticResource SplitViewTogglePaneButtonStyle}"
                      IsChecked="{Binding IsPaneOpen, ElementName=RootSplitView, Mode=TwoWay}"
                      Unchecked="TogglePaneButton_Checked"
                      AutomationProperties.Name="Menu"
                      ToolTipService.ToolTip="Menu" />
                </Grid>
</local:AbstractArticlePage>
